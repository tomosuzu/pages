import{_ as h,r as i,o as n,c as d,b as e,d as a,e as p,a as t}from"./app-538399c4.js";const o={},s=t('<h1 id="モブプログラミング" tabindex="-1"><a class="header-anchor" href="#モブプログラミング" aria-hidden="true">#</a> モブプログラミング</h1><p>〜認識や知識を共有しながらプログラミング〜</p><h2 id="モブプログラミングとは" tabindex="-1"><a class="header-anchor" href="#モブプログラミングとは" aria-hidden="true">#</a> モブプログラミングとは</h2><p>モブプログラミングは、開発チーム全体が集まって開発を行う開発手法です。</p><p>三人以上で同じ画面を見ながらプログラミングをして、</p><p>議論をしながら開発を進めていきます。</p><h2 id="なぜモブプログラミングをするのか" tabindex="-1"><a class="header-anchor" href="#なぜモブプログラミングをするのか" aria-hidden="true">#</a> なぜモブプログラミングをするのか</h2><p>ほぼ<a href="/agile/pair-programming">ペアプログラミング</a>の理由と同じですが、</p><p>特出するメリットをあげるとすると下記になります。</p><ul><li>教育効率</li><li>三人集まれば文殊の知恵</li></ul><h3 id="教育効率" tabindex="-1"><a class="header-anchor" href="#教育効率" aria-hidden="true">#</a> 教育効率</h3><p>ペアプログラミングは二人で行う開発ですが、</p><p>モブプログラミングは三人以上で行うものなので</p><p>より効率的に知識を共有することが可能です。</p><h3 id="三人集まれば文殊の知恵" tabindex="-1"><a class="header-anchor" href="#三人集まれば文殊の知恵" aria-hidden="true">#</a> 三人集まれば文殊の知恵</h3><p>一人での開発はもちろん、</p><p>ペアプログラミングであっても二人でわからない問題も、</p><p>三人集まれば解決するかもしれません。</p><p>難易度の高いプログラムの場合は、</p><p>ペアからモブへ、柔軟に変更してみるとよいでしょう。</p><h2 id="どうやっておこなうのか" tabindex="-1"><a class="header-anchor" href="#どうやっておこなうのか" aria-hidden="true">#</a> どうやっておこなうのか</h2><p>参加者全員が見れるような大きさのディスプレイと一つの開発機を用意します。</p><p>一人がキーボードを使いプログラミングをし、（ドライバー）</p><p>他の人は開発のアドバイスや質問などを行います。（ナビゲーター）</p><h2 id="注意点" tabindex="-1"><a class="header-anchor" href="#注意点" aria-hidden="true">#</a> 注意点</h2><h3 id="開発スピードは落ちる" tabindex="-1"><a class="header-anchor" href="#開発スピードは落ちる" aria-hidden="true">#</a> 開発スピードは落ちる</h3><p>開発スピードはペアプログラミングの時よりも当然ながら落ちてしまいます。</p><p>チーム内で学習や認識共有が必要な時に行うのが良いでしょう。</p><p>開発はペアプログラミング、学習はモブプログラミングです。</p><h3 id="ローテーションしよう" tabindex="-1"><a class="header-anchor" href="#ローテーションしよう" aria-hidden="true">#</a> ローテーションしよう</h3><p>同じ人が常にキーボードを触っているのではなく、</p><p>少なくとも参加者全員が一回はキーボードを触るようにしましょう。</p><h3 id="スピードに注意しよう" tabindex="-1"><a class="header-anchor" href="#スピードに注意しよう" aria-hidden="true">#</a> スピードに注意しよう</h3><p>早すぎるのも遅すぎるのも注意が必要です。</p><p>例えば、初心者に合わせて、ものすごく遅い進捗になってしまうと</p><p>他の参加者は学びがありませんし、</p><p>開発進捗も悪化するでしょう。</p><p>また、一人が詳しすぎて、その人がすべて開発しているような状況は</p><p>スピードは早いですが、他の人の理解が追いついていないリスクがあるので注意が必要です。</p><h3 id="集団思考に陥らないようにする" tabindex="-1"><a class="header-anchor" href="#集団思考に陥らないようにする" aria-hidden="true">#</a> 集団思考に陥らないようにする</h3><p>集団思考というのは、集団で何かを決める際に</p><p>不合理であったり、危険な意思決定が容認されてしまう現象のことです。</p><p>そんなこと起きないだろうと思われるかもしれませんが、</p><p>私の個人的な経験から言っても</p><p>同質性の高い集団だと非常に起きやすい現象だと思います。</p><p>集団の統一見解と異なる意見に対して</p><p>理解もなく頭から否定するようになったら危険な兆候です。</p><h3 id="攻撃しない" tabindex="-1"><a class="header-anchor" href="#攻撃しない" aria-hidden="true">#</a> 攻撃しない</h3><p>特定分野の技術力の高い人にありがちなことですが、</p><p>他の参加者を攻撃しないように、もしくは、</p><p>攻撃と受け取られないように気をつけましょう。</p><p>本人はただ指摘しただけだと思っていても</p><p>受け取り側はそう思っていない場合もあります。</p><p>関係性がある程度できていれば、</p><p>問題ない場合もありますが、十分注意しましょう。</p><h2 id="参考資料" tabindex="-1"><a class="header-anchor" href="#参考資料" aria-hidden="true">#</a> 参考資料</h2>',56),c={href:"https://openpracticelibrary.com/practice/mob-programming/",target:"_blank",rel:"noopener noreferrer"},l=e("li",null,[e("a",{href:"/agile/pair-programming"},"ペアプログラミング")],-1),_={href:"https://ja.wikipedia.org/wiki/%E9%9B%86%E5%9B%A3%E6%80%9D%E8%80%83",target:"_blank",rel:"noopener noreferrer"},f=e("h2",{id:"さいごに",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#さいごに","aria-hidden":"true"},"#"),a(" さいごに")],-1),u=e("p",null,"文章の改善のため、アンケートへのご協力をお願いいたします。",-1),m={href:"https://forms.gle/TKUJ2Gs9EoH2jQvp7",target:"_blank",rel:"noopener noreferrer"};function b(x,g){const r=i("ExternalLinkIcon");return n(),d("div",null,[s,e("ul",null,[e("li",null,[e("a",c,[a("Mob Programming"),p(r)])]),l,e("li",null,[e("a",_,[a("集団思考"),p(r)])])]),f,u,e("p",null,[e("a",m,[a("こちら"),p(r)])])])}const E=h(o,[["render",b],["__file","mob-programming.html.vue"]]);export{E as default};
